% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/subSample.R
\name{subSample}
\alias{subSample}
\alias{subSample.SingleCellExperiment}
\alias{subSample.Seurat}
\alias{subSample.default}
\title{Subsample cells based on their neighbors}
\usage{
subSample(object, ...)

\method{subSample}{SingleCellExperiment}(object, ..., assay = "counts")

\method{subSample}{Seurat}(object, ..., assay = NULL, layer = "counts")

\method{subSample}{default}(
  object,
  n_neighbors = 20,
  ...,
  min_remaining = 10,
  BNPARAM = AnnoyParam(),
  threads = NULL
)
}
\arguments{
\item{object}{A matrix-like object containing the counts (non-negative
integers). Rows are features and columns are cells.}

\item{...}{\itemize{
\item \code{default} method: not used.
\item \code{SingleCellExperiment} and \code{Seurat} method: additional arguments passed to
\code{default} method.
}}

\item{assay}{Integer scalar or string indicating which assay of x
contains the expression values.}

\item{layer}{Name of the layer to get from the assay data.}

\item{n_neighbors}{Integer scalar specifying the number of neighbors to
use. Larger values result in greater downsampling. Only used if \code{object} does
not contain existing nearest-neighbor results.}

\item{min_remaining}{Integer scalar specifying the minimum number of
remaining (i.e., unselected) neighbors that a cell must have in order to be
considered for selection. This should be less than or equal to
\code{n_neighbors}.}

\item{BNPARAM}{A \linkS4class{BiocNeighborParam} object specifying the
algorithm to use. Only used if \code{object} does not contain existing
nearest-neighbor results.}

\item{threads}{Integer scalar specifying the number of threads to use. If
\code{NULL}, all detected threads will be used. See
\code{\link[parallel:detectCores]{detectCores}}.}
}
\value{
Integer vector with the indices of the selected cells in the subsample.
}
\description{
Subsample a dataset by selecting cells to represent all of their nearest neighbors.
}
\seealso{
\link[scrapper:subsampleByNeighbors]{subsampleByNeighbors}
}
